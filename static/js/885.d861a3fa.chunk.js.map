{"version":3,"file":"static/js/885.d861a3fa.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","views/ContactsView.styled.jsx","views/ContactsView.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 15px 0;\n`;\nexport const AddButton = styled.button`\n  width: 120px;\n  padding: 5px 0;\n  margin: 10px auto;\n  border: transparent;\n  border-radius: 8px;\n  background-color: rgba(86, 141, 229, 1);\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: green;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  border: none;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 5px;\n  border-radius: 8px;\n  outline: none;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { Form, Input, AddButton } from './ContactForm.styled';\nimport { addContact } from 'redux/operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = { name, number };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>Name</label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label>Number</label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </Form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { Input } from '../ContactForm/ContactForm.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <div>\n      <label>\n        <p>Find contact by name</p>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={evt => dispatch(setFilter(evt.currentTarget.value))}\n          required\n        />\n      </label>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ContactList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  text-align: center;\n  padding-left: 0;\n  flex-wrap: wrap;\n`;\n\nexport const ContactItem = styled.li`\n  width: 200px;\n  padding-bottom: 15px;\n  border: 3px solid rgba(86, 141, 229, 1);\n  border-radius: 8px;\n  background-color: rgb(222, 233, 250);\n`;\n\nexport const RemoveButton = styled.button`\n  width: 80px;\n  padding: 5px 0;\n  border: transparent;\n  border-radius: 8px;\n  background-color: rgba(86, 141, 229, 1);\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    background-color: red;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport { ContactList, ContactItem, RemoveButton } from './ContactList.styled';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <ContactList>\n      {filteredContacts.map(contact => {\n        return (\n          <ContactItem key={contact.id}>\n            <p>\n              <b>{contact.name}</b>\n            </p>\n            <p>{contact.number}</p>\n            <RemoveButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </RemoveButton>\n          </ContactItem>\n        );\n      })}\n    </ContactList>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n`;\n\nexport const FormContainer = styled.div`\n  width: 310px;\n  margin: 0 auto;\n  padding: 5px 20px;\n  border-radius: 8px;\n  background-color: rgba(225, 225, 225, 0.8);\n`;\n\nexport const Container = styled.div`\n  width: 310px;\n  margin: 0 auto;\n  padding: 5px 20px 20px;\n  border-radius: 8px;\n  background-color: rgba(225, 225, 225, 0.8);\n`;\n\nexport const ContactsContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 0;\n  color: rgba(86, 141, 229, 1);\n`;\n\nexport const TitleContacts = styled.h2`\n  color: rgba(86, 141, 229, 1);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport ContactsForm from '../components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from '../components/ContactsList/ContactList';\nimport { getError, getIsLoading } from 'redux/selectors';\nimport Loader from '../components/Loader/Loader';\nimport {\n  MainContainer,\n  FormContainer,\n  ContactsContainer,\n  Container,\n  Title,\n  TitleContacts,\n} from './ContactsView.styled';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <FormContainer>\n        <Title>New Contact</Title>\n        <ContactsForm />\n      </FormContainer>\n      <ContactsContainer>\n        <Container>\n          <TitleContacts>Contacts</TitleContacts>\n          <Filter />\n        </Container>\n        <ContactsList />\n        {isLoading && !error && <Loader />}\n      </ContactsContainer>\n    </MainContainer>\n  );\n}\n"],"names":["Form","styled","AddButton","Input","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","evt","currentTarget","value","reset","onSubmit","preventDefault","newContact","find","contact","toLowerCase","alert","addContact","type","onChange","pattern","title","required","Filter","filter","getFilter","setFilter","ContactList","ContactItem","RemoveButton","ContactsList","filteredContacts","getFilteredContacts","map","onClick","deleteContact","id","MainContainer","FormContainer","Container","ContactsContainer","Title","TitleContacts","ContactsView","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","Loader"],"sourceRoot":""}